# Security: Hardened supervisord configuration following least privilege principle
[supervisord]
nodaemon=true
# Security: supervisord runs as root only for process management, services run as appuser
user=root
logfile=/var/log/supervisor/supervisord.log
pidfile=/var/run/supervisord.pid
# Security: Disable unnecessary features
silent=false
# Security: Restrict log rotation and retention
logfile_maxbytes=10MB
logfile_backups=3
loglevel=info

[program:fastapi]
# Security: Run FastAPI service as non-root user
command=bash -c "./start.sh"
directory=/app
user=appuser
# Security: Process management settings
autostart=true
autorestart=true
autorestart_pause=10
startretries=3
# Security: Resource limits and logging
stderr_logfile=/var/log/supervisor/fastapi.err.log
stdout_logfile=/var/log/supervisor/fastapi.out.log
stderr_logfile_maxbytes=5MB
stdout_logfile_maxbytes=5MB
stderr_logfile_backups=2
stdout_logfile_backups=2
# Security: Minimal environment variables
environment=PATH="/usr/local/bin:/usr/bin:/bin",CADDY_PROXY_MODE="true"
# Security: Process priority and limits
priority=100
startsecs=10

[program:caddy]
# Security: Run Caddy service as non-root user (Caddy can bind to port 80 with CAP_NET_BIND_SERVICE)
command=caddy run --config /app/Caddyfile --adapter caddyfile
directory=/app
user=appuser
# Security: Process management settings
autostart=true
autorestart=true
autorestart_pause=10
startretries=3
# Security: Resource limits and logging
stderr_logfile=/var/log/supervisor/caddy.err.log
stdout_logfile=/var/log/supervisor/caddy.out.log
stderr_logfile_maxbytes=5MB
stdout_logfile_maxbytes=5MB
stderr_logfile_backups=2
stdout_logfile_backups=2
# Security: Minimal environment variables
environment=PATH="/usr/local/bin:/usr/bin:/bin"
# Security: Process priority and limits
priority=200
startsecs=5

# Security: Restrict unix socket access
[unix_http_server]
file=/var/run/supervisor.sock
chmod=0700
chown=root:root

# Security: Supervisorctl configuration
[supervisorctl]
serverurl=unix:///var/run/supervisor.sock

# Security: RPC interface with restricted access
[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface