{"version":3,"sources":["/Users/matt/Sites/MarketEdge/platform-wrapper/frontend/src/__tests__/integration/ModuleFeatureFlagIntegration.test.tsx"],"sourcesContent":["/**\n * Integration tests for Module-Feature Flag Connection (US-203)\n * Tests the complete integration of modules with feature flags\n */\n\nimport React from 'react'\nimport { render, screen, waitFor, fireEvent } from '@testing-library/react'\nimport { QueryClient, QueryClientProvider } from 'react-query'\nimport { jest } from '@jest/globals'\n\n// Components to test\nimport { ModuleDiscovery } from '@/components/admin/ModuleDiscovery'\nimport { ModuleFlagManager } from '@/components/admin/ModuleFlagManager'\nimport { EnhancedModuleManager } from '@/components/admin/EnhancedModuleManager'\nimport FeatureFlaggedApplicationRegistry from '@/components/ui/FeatureFlaggedApplicationRegistry'\n\n// Hooks to test\nimport { \n  useModuleFeatureFlags,\n  useModuleDiscovery,\n  useModuleFlagHierarchy,\n  useModuleCapabilities\n} from '@/hooks/useModuleFeatureFlags'\nimport { \n  useModuleFeatureFlag,\n  useApplicationAccess,\n  useFeatureFlaggedRoute\n} from '@/hooks/useModuleFeatureFlag'\n\n// Services\nimport { moduleFeatureFlagApiService } from '@/services/module-feature-flag-api'\n\n// Test data\nconst mockModuleWithFlags = {\n  module: {\n    id: 'market-edge',\n    name: 'Market Edge',\n    description: 'Market intelligence module',\n    version: '1.0.0',\n    module_type: 'analytics',\n    status: 'active',\n    is_core: false,\n    requires_license: false,\n    dependencies: [],\n    created_at: '2024-01-01T00:00:00Z',\n    updated_at: '2024-01-01T00:00:00Z',\n    feature_flags: [],\n    required_flags: ['modules.market_edge.enabled'],\n    optional_flags: ['modules.market_edge.advanced_analytics'],\n    flag_namespace: 'modules.market_edge',\n    capabilities: []\n  },\n  enabled_flags: {\n    'modules.market_edge.enabled': {\n      flag_key: 'modules.market_edge.enabled',\n      enabled: true,\n      config: {},\n      inherited_from: 'global'\n    },\n    'modules.market_edge.advanced_analytics': {\n      flag_key: 'modules.market_edge.advanced_analytics',\n      enabled: false,\n      config: {},\n      inherited_from: 'module'\n    }\n  },\n  available_capabilities: ['basic_analytics', 'competitor_tracking'],\n  disabled_capabilities: ['advanced_analytics'],\n  health_status: 'healthy'\n}\n\nconst mockDiscoveryResponse = {\n  enabled_modules: [\n    {\n      module_id: 'market-edge',\n      name: 'Market Edge',\n      version: '1.0.0',\n      status: 'active',\n      capabilities: ['basic_analytics', 'competitor_tracking'],\n      feature_flags: {\n        'modules.market_edge.enabled': true,\n        'modules.market_edge.advanced_analytics': false\n      },\n      config: {\n        'api_endpoint': 'https://api.marketedge.com',\n        'refresh_interval': 30000\n      },\n      health: 'healthy'\n    }\n  ],\n  disabled_modules: [\n    {\n      module_id: 'causal-edge',\n      name: 'Causal Edge',\n      reason: 'Missing required flags',\n      missing_flags: ['modules.causal_edge.enabled'],\n      can_enable: true\n    }\n  ],\n  total_available: 3,\n  user_accessible: 1\n}\n\nconst mockHierarchy = {\n  module_id: 'market-edge',\n  hierarchy: {\n    global: [\n      {\n        flag_key: 'show_placeholder_content',\n        name: 'Show Placeholder Content',\n        enabled: true,\n        affects_module: true\n      }\n    ],\n    module: [\n      {\n        flag_key: 'modules.market_edge.enabled',\n        name: 'Market Edge Module Enabled',\n        enabled: true,\n        overrides_global: false\n      }\n    ],\n    features: {\n      analytics: [\n        {\n          flag_key: 'modules.market_edge.analytics.basic',\n          name: 'Basic Analytics',\n          enabled: true,\n          capability: 'basic_analytics'\n        }\n      ]\n    },\n    capabilities: {\n      basic_analytics: [\n        {\n          flag_key: 'modules.market_edge.capabilities.basic_analytics',\n          name: 'Basic Analytics Capability',\n          enabled: true,\n          config: { max_queries: 100 }\n        }\n      ]\n    }\n  },\n  effective_flags: {\n    'show_placeholder_content': {\n      enabled: true,\n      source: 'global',\n      config: {}\n    },\n    'modules.market_edge.enabled': {\n      enabled: true,\n      source: 'module',\n      config: {}\n    }\n  },\n  inheritance_chain: [\n    {\n      level: 'global',\n      flag_key: 'show_placeholder_content',\n      enabled: true\n    },\n    {\n      level: 'module',\n      flag_key: 'modules.market_edge.enabled',\n      enabled: true\n    }\n  ]\n}\n\n// Mock services\njest.mock('@/services/module-feature-flag-api')\njest.mock('@/lib/auth')\n\n// Mock fetch for other API calls\nglobal.fetch = jest.fn()\n\nconst createTestQueryClient = () =>\n  new QueryClient({\n    defaultOptions: {\n      queries: {\n        retry: false,\n        cacheTime: 0,\n      },\n    },\n  })\n\nconst TestWrapper: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const queryClient = createTestQueryClient()\n  return (\n    <QueryClientProvider client={queryClient}>\n      {children}\n    </QueryClientProvider>\n  )\n}\n\n// Mock hook implementations for testing\njest.mock('@/hooks/useAuth', () => ({\n  useAuth: () => ({\n    user: { id: 'test-user', organisation_id: 'test-org' },\n    isAuthenticated: true\n  })\n}))\n\ndescribe('Module-Feature Flag Integration (US-203)', () => {\n  beforeEach(() => {\n    jest.clearAllMocks()\n    \n    // Setup API service mocks\n    ;(moduleFeatureFlagApiService.getModulesWithFlags as jest.Mock).mockResolvedValue([mockModuleWithFlags])\n    ;(moduleFeatureFlagApiService.discoverEnabledModules as jest.Mock).mockResolvedValue(mockDiscoveryResponse)\n    ;(moduleFeatureFlagApiService.getModuleFlagHierarchy as jest.Mock).mockResolvedValue(mockHierarchy)\n    ;(moduleFeatureFlagApiService.checkModuleCapabilities as jest.Mock).mockResolvedValue({\n      'basic_analytics': true,\n      'advanced_analytics': false\n    })\n\n    // Mock fetch for other API calls\n    ;(global.fetch as jest.Mock).mockResolvedValue({\n      ok: true,\n      json: async () => ({ modules: [] })\n    })\n  })\n\n  describe('Module Discovery Component', () => {\n    it('should display enabled and disabled modules based on feature flags', async () => {\n      render(\n        <TestWrapper>\n          <ModuleDiscovery />\n        </TestWrapper>\n      )\n\n      // Wait for loading to complete\n      await waitFor(() => {\n        expect(screen.queryByText('Loading')).not.toBeInTheDocument()\n      })\n\n      // Check enabled modules are displayed\n      expect(screen.getByText('Market Edge')).toBeInTheDocument()\n      expect(screen.getByText('healthy')).toBeInTheDocument()\n\n      // Check disabled modules are displayed\n      expect(screen.getByText('Causal Edge')).toBeInTheDocument()\n      expect(screen.getByText('Missing required flags')).toBeInTheDocument()\n\n      // Check summary stats\n      expect(screen.getByText('Total Available')).toBeInTheDocument()\n      expect(screen.getByText('3')).toBeInTheDocument() // total_available\n      expect(screen.getByText('1')).toBeInTheDocument() // user_accessible\n    })\n\n    it('should handle module selection for flag management', async () => {\n      const onModuleSelect = jest.fn()\n      \n      render(\n        <TestWrapper>\n          <ModuleDiscovery onModuleSelect={onModuleSelect} />\n        </TestWrapper>\n      )\n\n      await waitFor(() => {\n        expect(screen.getByText('Market Edge')).toBeInTheDocument()\n      })\n\n      // Click on module\n      fireEvent.click(screen.getByText('Market Edge'))\n      expect(onModuleSelect).toHaveBeenCalledWith('market-edge')\n    })\n\n    it('should show capability information', async () => {\n      render(\n        <TestWrapper>\n          <ModuleDiscovery showCapabilities={true} />\n        </TestWrapper>\n      )\n\n      await waitFor(() => {\n        expect(screen.getByText('Capabilities (2):')).toBeInTheDocument()\n        expect(screen.getByText('basic_analytics')).toBeInTheDocument()\n        expect(screen.getByText('competitor_tracking')).toBeInTheDocument()\n      })\n    })\n  })\n\n  describe('Module Flag Manager Component', () => {\n    it('should display module flag hierarchy', async () => {\n      render(\n        <TestWrapper>\n          <ModuleFlagManager moduleId=\"market-edge\" />\n        </TestWrapper>\n      )\n\n      await waitFor(() => {\n        expect(screen.getByText('Flag Hierarchy: market-edge')).toBeInTheDocument()\n      })\n\n      // Check hierarchy levels are displayed\n      expect(screen.getByText('Global Flags')).toBeInTheDocument()\n      expect(screen.getByText('Module Flags')).toBeInTheDocument()\n\n      // Check specific flags\n      expect(screen.getByText('Show Placeholder Content')).toBeInTheDocument()\n      expect(screen.getByText('Market Edge Module Enabled')).toBeInTheDocument()\n    })\n\n    it('should show inheritance chain for selected flag', async () => {\n      render(\n        <TestWrapper>\n          <ModuleFlagManager moduleId=\"market-edge\" showInheritance={true} />\n        </TestWrapper>\n      )\n\n      await waitFor(() => {\n        expect(screen.getByText('Market Edge Module Enabled')).toBeInTheDocument()\n      })\n\n      // Click on a flag to select it\n      fireEvent.click(screen.getByText('Market Edge Module Enabled'))\n\n      await waitFor(() => {\n        expect(screen.getByText('Inheritance Chain:')).toBeInTheDocument()\n        expect(screen.getByText('Effective State')).toBeInTheDocument()\n      })\n    })\n\n    it('should handle module selection and switching', async () => {\n      const onModuleSelect = jest.fn()\n      \n      render(\n        <TestWrapper>\n          <ModuleFlagManager onModuleSelect={onModuleSelect} />\n        </TestWrapper>\n      )\n\n      await waitFor(() => {\n        expect(screen.getByText('Select Module')).toBeInTheDocument()\n      })\n\n      // Should show available modules\n      expect(screen.getByText('market-edge')).toBeInTheDocument()\n    })\n  })\n\n  describe('Enhanced Module Manager Component', () => {\n    it('should display modules with flag status integration', async () => {\n      render(\n        <TestWrapper>\n          <EnhancedModuleManager />\n        </TestWrapper>\n      )\n\n      // Wait for components to load\n      await waitFor(() => {\n        expect(screen.getByText('Enhanced Module Manager')).toBeInTheDocument()\n      })\n\n      // Check view tabs are present\n      expect(screen.getByText('Overview')).toBeInTheDocument()\n      expect(screen.getByText('Discovery')).toBeInTheDocument()\n      expect(screen.getByText('Flag Management')).toBeInTheDocument()\n      expect(screen.getByText('Health Monitor')).toBeInTheDocument()\n    })\n\n    it('should switch between different views', async () => {\n      render(\n        <TestWrapper>\n          <EnhancedModuleManager />\n        </TestWrapper>\n      )\n\n      await waitFor(() => {\n        expect(screen.getByText('Enhanced Module Manager')).toBeInTheDocument()\n      })\n\n      // Click on Discovery tab\n      fireEvent.click(screen.getByText('Discovery'))\n      \n      await waitFor(() => {\n        expect(screen.getByText('Module Discovery')).toBeInTheDocument()\n      })\n\n      // Click on Flag Management tab\n      fireEvent.click(screen.getByText('Flag Management'))\n      \n      await waitFor(() => {\n        expect(screen.getByText('Module Flag Manager')).toBeInTheDocument()\n      })\n    })\n  })\n\n  describe('Feature Flagged Application Registry', () => {\n    it('should show application availability based on feature flags', async () => {\n      // Mock the application access hook\n      const mockUseApplicationAccess = jest.fn(() => ({\n        canAccessApplication: true,\n        canAccessFeature: jest.fn(() => true),\n        canUseCapability: jest.fn(() => true),\n        applicationConfig: null,\n        moduleCapabilities: ['basic_analytics'],\n        isLoading: false,\n        error: null,\n        debugInfo: {\n          requiredFlags: { 'show_placeholder_content': true },\n          optionalFlags: { 'demo_mode': true },\n          moduleEnabled: true,\n          moduleHealth: 'healthy'\n        }\n      }))\n\n      // Mock the hook\n      jest.doMock('@/hooks/useModuleFeatureFlag', () => ({\n        useApplicationAccess: mockUseApplicationAccess\n      }))\n\n      const { useApplicationAccess } = await import('@/hooks/useModuleFeatureFlag')\n\n      render(\n        <TestWrapper>\n          <FeatureFlaggedApplicationRegistry />\n        </TestWrapper>\n      )\n\n      await waitFor(() => {\n        expect(screen.getByText('Application Registry')).toBeInTheDocument()\n      })\n\n      // Should show applications with availability status\n      expect(screen.getByText('Access applications based on your feature flags and permissions')).toBeInTheDocument()\n    })\n  })\n\n  describe('Module Feature Flag Hooks', () => {\n    it('useModuleFeatureFlag should return correct module state', async () => {\n      const TestComponent = () => {\n        const result = useModuleFeatureFlag('market-edge')\n        \n        return (\n          <div>\n            <div>Module Enabled: {result.isModuleEnabled ? 'Yes' : 'No'}</div>\n            <div>Health: {result.health}</div>\n            <div>Capabilities: {result.availableCapabilities.join(', ')}</div>\n          </div>\n        )\n      }\n\n      render(\n        <TestWrapper>\n          <TestComponent />\n        </TestWrapper>\n      )\n\n      await waitFor(() => {\n        expect(screen.getByText('Module Enabled: Yes')).toBeInTheDocument()\n        expect(screen.getByText('Health: healthy')).toBeInTheDocument()\n      })\n    })\n\n    it('useApplicationAccess should check feature flags and module availability', async () => {\n      const TestComponent = () => {\n        const result = useApplicationAccess('market-edge')\n        \n        return (\n          <div>\n            <div>Can Access: {result.canAccessApplication ? 'Yes' : 'No'}</div>\n            <div>Loading: {result.isLoading ? 'Yes' : 'No'}</div>\n            {result.error && <div>Error: {result.error.message}</div>}\n          </div>\n        )\n      }\n\n      render(\n        <TestWrapper>\n          <TestComponent />\n        </TestWrapper>\n      )\n\n      await waitFor(() => {\n        expect(screen.getByText('Loading: No')).toBeInTheDocument()\n      })\n    })\n\n    it('useFeatureFlaggedRoute should control route access', async () => {\n      const TestComponent = () => {\n        const result = useFeatureFlaggedRoute('/market-edge', ['modules.market_edge.enabled'])\n        \n        return (\n          <div>\n            <div>Can Access Route: {result.canAccess ? 'Yes' : 'No'}</div>\n            <div>Should Redirect: {result.shouldRedirect ? 'Yes' : 'No'}</div>\n            <div>Missing Flags: {result.missingFlags.join(', ')}</div>\n          </div>\n        )\n      }\n\n      render(\n        <TestWrapper>\n          <TestComponent />\n        </TestWrapper>\n      )\n\n      // Should control access based on feature flags\n      await waitFor(() => {\n        expect(screen.getByText('Can Access Route:')).toBeInTheDocument()\n      })\n    })\n  })\n\n  describe('Hierarchical Flag Inheritance', () => {\n    it('should correctly resolve flag inheritance from global to capability level', async () => {\n      const TestComponent = () => {\n        const hierarchy = useModuleFlagHierarchy('market-edge')\n        \n        if (hierarchy.isLoading) return <div>Loading...</div>\n        if (hierarchy.error) return <div>Error</div>\n        if (!hierarchy.hierarchy) return <div>No hierarchy</div>\n\n        return (\n          <div>\n            <div>Hierarchy loaded</div>\n            <div>Global flags: {hierarchy.hierarchy.global.length}</div>\n            <div>Module flags: {hierarchy.hierarchy.module.length}</div>\n            <div>Effective flags: {Object.keys(hierarchy.effectiveFlags).length}</div>\n          </div>\n        )\n      }\n\n      render(\n        <TestWrapper>\n          <TestComponent />\n        </TestWrapper>\n      )\n\n      await waitFor(() => {\n        expect(screen.getByText('Hierarchy loaded')).toBeInTheDocument()\n        expect(screen.getByText('Global flags: 1')).toBeInTheDocument()\n        expect(screen.getByText('Module flags: 1')).toBeInTheDocument()\n      })\n    })\n\n    it('should handle flag overrides correctly', () => {\n      // Test that child flags can override parent flags\n      // This would be tested through the hierarchy resolution logic\n      const effectiveFlags = {\n        'global.feature': { enabled: true, source: 'global' },\n        'module.feature': { enabled: false, source: 'module' } // overrides global\n      }\n\n      // In a real implementation, the child flag should override the parent\n      expect(effectiveFlags['module.feature'].enabled).toBe(false)\n      expect(effectiveFlags['module.feature'].source).toBe('module')\n    })\n  })\n\n  describe('Error Handling', () => {\n    it('should handle API errors gracefully', async () => {\n      // Mock API failure\n      ;(moduleFeatureFlagApiService.getModulesWithFlags as jest.Mock).mockRejectedValue(\n        new Error('API Error')\n      )\n\n      render(\n        <TestWrapper>\n          <ModuleDiscovery />\n        </TestWrapper>\n      )\n\n      await waitFor(() => {\n        expect(screen.getByText('Module Discovery Failed')).toBeInTheDocument()\n        expect(screen.getByText('API Error')).toBeInTheDocument()\n      })\n    })\n\n    it('should provide fallback behavior when flags are unavailable', async () => {\n      // Test fallback behavior when feature flag service is down\n      const TestComponent = () => {\n        const result = useModuleFeatureFlag('market-edge')\n        \n        return (\n          <div>\n            <div>Module Available: {result.isAvailable ? 'Yes' : 'No'}</div>\n            <div>Has Error: {result.error ? 'Yes' : 'No'}</div>\n          </div>\n        )\n      }\n\n      render(\n        <TestWrapper>\n          <TestComponent />\n        </TestWrapper>\n      )\n\n      // Should handle graceful degradation\n      await waitFor(() => {\n        expect(screen.getByText('Module Available:')).toBeInTheDocument()\n      })\n    })\n  })\n\n  describe('Performance and Caching', () => {\n    it('should cache module flag results', async () => {\n      const TestComponent = () => {\n        const result1 = useModuleFeatureFlags()\n        const result2 = useModuleFeatureFlags() // Should use cache\n        \n        return (\n          <div>\n            <div>Calls made</div>\n            <div>Cache working: {result1.lastUpdated === result2.lastUpdated ? 'Yes' : 'No'}</div>\n          </div>\n        )\n      }\n\n      render(\n        <TestWrapper>\n          <TestComponent />\n        </TestWrapper>\n      )\n\n      // Verify API was called only once due to caching\n      await waitFor(() => {\n        expect(moduleFeatureFlagApiService.getModulesWithFlags).toHaveBeenCalledTimes(1)\n      })\n    })\n\n    it('should batch capability checks', async () => {\n      const TestComponent = () => {\n        const result = useModuleCapabilities('market-edge', ['basic_analytics', 'advanced_analytics'])\n        \n        return (\n          <div>\n            <div>Capabilities checked: {Object.keys(result.capabilities).length}</div>\n          </div>\n        )\n      }\n\n      render(\n        <TestWrapper>\n          <TestComponent />\n        </TestWrapper>\n      )\n\n      // Verify single batched API call was made\n      await waitFor(() => {\n        expect(moduleFeatureFlagApiService.checkModuleCapabilities).toHaveBeenCalledTimes(1)\n        expect(moduleFeatureFlagApiService.checkModuleCapabilities).toHaveBeenCalledWith(\n          'market-edge', \n          ['basic_analytics', 'advanced_analytics']\n        )\n      })\n    })\n  })\n})\n\ndescribe('Integration with Existing Application Registry', () => {\n  it('should maintain backward compatibility with existing ApplicationRegistry', () => {\n    // Test that existing APPLICATION_REGISTRY structure works\n    const { APPLICATION_REGISTRY } = require('@/components/ui/ApplicationRegistry')\n    \n    // Verify structure hasn't changed\n    expect(APPLICATION_REGISTRY).toBeDefined()\n    expect(APPLICATION_REGISTRY.length).toBeGreaterThan(0)\n    \n    const firstApp = APPLICATION_REGISTRY[0]\n    expect(firstApp).toHaveProperty('id')\n    expect(firstApp).toHaveProperty('moduleId')\n    expect(firstApp).toHaveProperty('requiredFlags')\n    expect(firstApp).toHaveProperty('optionalFlags')\n  })\n\n  it('should support feature flag integration without breaking existing functionality', () => {\n    // Verify that the enhanced registry can fallback to basic functionality\n    const applicationConfig = {\n      id: 'test-app',\n      moduleId: 'test-module',\n      requiredFlags: ['test.required'],\n      optionalFlags: ['test.optional']\n    }\n\n    // Basic functionality should still work\n    expect(applicationConfig.id).toBe('test-app')\n    expect(applicationConfig.requiredFlags).toContain('test.required')\n  })\n})"],"names":["mockModuleWithFlags","module","id","name","description","version","module_type","status","is_core","requires_license","dependencies","created_at","updated_at","feature_flags","required_flags","optional_flags","flag_namespace","capabilities","enabled_flags","flag_key","enabled","config","inherited_from","available_capabilities","disabled_capabilities","health_status","mockDiscoveryResponse","enabled_modules","module_id","health","disabled_modules","reason","missing_flags","can_enable","total_available","user_accessible","mockHierarchy","hierarchy","global","affects_module","overrides_global","features","analytics","capability","basic_analytics","max_queries","effective_flags","source","inheritance_chain","level","jest","mock","fetch","fn","createTestQueryClient","QueryClient","defaultOptions","queries","retry","cacheTime","TestWrapper","children","queryClient","QueryClientProvider","client","useAuth","user","organisation_id","isAuthenticated","describe","beforeEach","clearAllMocks","moduleFeatureFlagApiService","getModulesWithFlags","mockResolvedValue","discoverEnabledModules","getModuleFlagHierarchy","checkModuleCapabilities","ok","json","modules","it","render","ModuleDiscovery","waitFor","expect","screen","queryByText","not","toBeInTheDocument","getByText","onModuleSelect","fireEvent","click","toHaveBeenCalledWith","showCapabilities","ModuleFlagManager","moduleId","showInheritance","EnhancedModuleManager","mockUseApplicationAccess","canAccessApplication","canAccessFeature","canUseCapability","applicationConfig","moduleCapabilities","isLoading","error","debugInfo","requiredFlags","optionalFlags","moduleEnabled","moduleHealth","doMock","useApplicationAccess","FeatureFlaggedApplicationRegistry","TestComponent","result","useModuleFeatureFlag","div","isModuleEnabled","availableCapabilities","join","message","useFeatureFlaggedRoute","canAccess","shouldRedirect","missingFlags","useModuleFlagHierarchy","length","Object","keys","effectiveFlags","toBe","mockRejectedValue","Error","isAvailable","result1","useModuleFeatureFlags","result2","lastUpdated","toHaveBeenCalledTimes","useModuleCapabilities","APPLICATION_REGISTRY","require","toBeDefined","toBeGreaterThan","firstApp","toHaveProperty","toContain"],"mappings":"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"}