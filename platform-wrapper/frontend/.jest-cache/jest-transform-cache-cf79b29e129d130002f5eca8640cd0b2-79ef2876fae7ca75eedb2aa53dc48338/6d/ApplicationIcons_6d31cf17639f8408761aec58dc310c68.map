{"version":3,"sources":["/Users/matt/Sites/MarketEdge/platform-wrapper/frontend/src/components/ui/ApplicationIcons.tsx"],"sourcesContent":["'use client'\n\nimport { useState, useEffect } from 'react'\nimport { useRouter, usePathname } from 'next/navigation'\nimport {\n  ChartBarIcon,\n  ShareIcon,\n  SparklesIcon,\n} from '@heroicons/react/24/outline'\nimport {\n  ChartBarIcon as ChartBarIconSolid,\n  ShareIcon as ShareIconSolid,\n  SparklesIcon as SparklesIconSolid,\n} from '@heroicons/react/24/solid'\nimport LoadingSpinner from '@/components/ui/LoadingSpinner'\nimport { \n  ApplicationName,\n  hasApplicationAccess,\n  getApplicationInfo,\n  getApplicationRoute\n} from '@/utils/application-access'\nimport { ApplicationAccess } from '@/types/auth'\n\ninterface Application {\n  id: ApplicationName\n  name: string\n  displayName: string\n  route: string\n  outlineIcon: React.ComponentType<{ className?: string }>\n  solidIcon: React.ComponentType<{ className?: string }>\n  color: string\n  themeColor: string\n  description: string\n}\n\nconst applications: Application[] = [\n  {\n    id: 'market_edge',\n    name: 'Market Edge',\n    displayName: 'Market Edge',\n    route: '/market-edge',\n    outlineIcon: ChartBarIcon,\n    solidIcon: ChartBarIconSolid,\n    color: 'from-blue-500 to-indigo-600',\n    themeColor: 'blue',\n    description: 'Competitive Intelligence & Market Analysis'\n  },\n  {\n    id: 'causal_edge',\n    name: 'Causal Edge',\n    displayName: 'Causal Edge',\n    route: '/causal-edge',\n    outlineIcon: ShareIcon,\n    solidIcon: ShareIconSolid,\n    color: 'from-green-500 to-emerald-600',\n    themeColor: 'green',\n    description: 'Business Process & Causal Analysis'\n  },\n  {\n    id: 'value_edge',\n    name: 'Value Edge',\n    displayName: 'Value Edge',\n    route: '/value-edge',\n    outlineIcon: SparklesIcon,\n    solidIcon: SparklesIconSolid,\n    color: 'from-purple-500 to-violet-600',\n    themeColor: 'purple',\n    description: 'Value Engineering & ROI Analysis'\n  }\n]\n\ninterface ApplicationIconsProps {\n  className?: string\n  userApplicationAccess?: ApplicationAccess[]\n}\n\nexport default function ApplicationIcons({ \n  className = '', \n  userApplicationAccess = []\n}: ApplicationIconsProps) {\n  const router = useRouter()\n  const pathname = usePathname()\n  const [currentApplication, setCurrentApplication] = useState<Application | null>(null)\n  const [isLoading, setIsLoading] = useState<ApplicationName | null>(null)\n  const [tooltipVisible, setTooltipVisible] = useState<ApplicationName | null>(null)\n\n  // Get current application from pathname\n  useEffect(() => {\n    const currentApp = applications.find(app => pathname.startsWith(app.route))\n    if (currentApp) {\n      setCurrentApplication(currentApp)\n      // Save to localStorage (client-side only)\n      if (typeof window !== 'undefined') {\n        localStorage.setItem('currentApplication', currentApp.id)\n      }\n    } else {\n      // Try to restore from localStorage (client-side only)\n      if (typeof window !== 'undefined') {\n        const savedAppId = localStorage.getItem('currentApplication') as ApplicationName\n        const savedApp = applications.find(app => app.id === savedAppId)\n        if (savedApp && hasUserAccess(savedApp)) {\n          setCurrentApplication(savedApp)\n        }\n      }\n    }\n  }, [pathname, userApplicationAccess])\n\n  // Filter applications based on user application access\n  const accessibleApplications = applications.filter(app => hasUserAccess(app))\n\n  function hasUserAccess(app: Application): boolean {\n    return hasApplicationAccess(userApplicationAccess, app.id)\n  }\n\n  const handleApplicationSwitch = async (application: Application) => {\n    if (application.id === currentApplication?.id || isLoading) return\n    \n    setIsLoading(application.id)\n    try {\n      // Save to localStorage (client-side only)\n      if (typeof window !== 'undefined') {\n        localStorage.setItem('currentApplication', application.id)\n      }\n      \n      // Navigate to the application\n      router.push(application.route)\n      setCurrentApplication(application)\n      setTooltipVisible(null)\n    } catch (error) {\n      console.error('Failed to switch application:', error)\n    } finally {\n      setIsLoading(null)\n    }\n  }\n\n  // Don't show if user has access to only one application or none\n  if (accessibleApplications.length <= 1) {\n    return null\n  }\n\n  return (\n    <div className={`flex items-center space-x-1 sm:space-x-2 ${className}`}>\n      {accessibleApplications.map((application) => {\n        const isCurrent = application.id === currentApplication?.id\n        const isLoadingThis = isLoading === application.id\n        const IconComponent = isCurrent ? application.solidIcon : application.outlineIcon\n        \n        return (\n          <div key={application.id} className=\"relative\">\n            <button\n              onClick={() => handleApplicationSwitch(application)}\n              onMouseEnter={() => setTooltipVisible(application.id)}\n              onMouseLeave={() => setTooltipVisible(null)}\n              onTouchStart={() => setTooltipVisible(application.id)}\n              onTouchEnd={() => setTimeout(() => setTooltipVisible(null), 2000)} // Hide after 2s on mobile\n              disabled={isLoadingThis}\n              className={`\n                relative group p-1.5 sm:p-2 rounded-lg transition-all duration-200 ease-in-out\n                ${isCurrent \n                  ? `bg-gradient-to-br ${application.color} text-white shadow-md ring-2 ring-white ring-opacity-50` \n                  : 'text-gray-500 hover:text-gray-700 hover:bg-gray-100 active:bg-gray-200'\n                }\n                ${isLoadingThis ? 'opacity-50 cursor-not-allowed' : 'cursor-pointer hover:scale-105 active:scale-95'}\n                focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\n                transform-gpu\n              `}\n              aria-label={`Switch to ${application.displayName}`}\n              title={application.displayName}\n            >\n              {isLoadingThis ? (\n                <LoadingSpinner size=\"sm\" className=\"w-5 h-5 sm:w-6 sm:h-6\" />\n              ) : (\n                <>\n                  <IconComponent className=\"w-5 h-5 sm:w-6 sm:h-6\" />\n                  \n                  {/* Active indicator */}\n                  {isCurrent && (\n                    <div className=\"absolute -bottom-0.5 left-1/2 transform -translate-x-1/2\">\n                      <div className=\"w-1 h-1 bg-white rounded-full shadow-sm\"></div>\n                    </div>\n                  )}\n                </>\n              )}\n            </button>\n            \n            {/* Tooltip - only show on desktop hover or mobile touch */}\n            {tooltipVisible === application.id && !isLoadingThis && (\n              <div className=\"absolute bottom-full left-1/2 transform -translate-x-1/2 mb-2 z-50 pointer-events-none\">\n                <div className=\"bg-gray-900 text-white px-2 py-1.5 sm:px-3 sm:py-2 rounded-md text-xs sm:text-sm whitespace-nowrap shadow-lg max-w-xs\">\n                  <div className=\"font-medium\">{application.displayName}</div>\n                  <div className=\"text-xs opacity-90 hidden sm:block\">{application.description}</div>\n                  \n                  {/* Tooltip arrow */}\n                  <div className=\"absolute top-full left-1/2 transform -translate-x-1/2\">\n                    <div className=\"border-l-4 border-r-4 border-t-4 border-transparent border-t-gray-900\"></div>\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n        )\n      })}\n    </div>\n  )\n}"],"names":["ApplicationIcons","applications","id","name","displayName","route","outlineIcon","ChartBarIcon","solidIcon","ChartBarIconSolid","color","themeColor","description","ShareIcon","ShareIconSolid","SparklesIcon","SparklesIconSolid","className","userApplicationAccess","router","useRouter","pathname","usePathname","currentApplication","setCurrentApplication","useState","isLoading","setIsLoading","tooltipVisible","setTooltipVisible","useEffect","currentApp","find","app","startsWith","window","localStorage","setItem","savedAppId","getItem","savedApp","hasUserAccess","accessibleApplications","filter","hasApplicationAccess","handleApplicationSwitch","application","push","error","console","length","div","map","isCurrent","isLoadingThis","IconComponent","button","onClick","onMouseEnter","onMouseLeave","onTouchStart","onTouchEnd","setTimeout","disabled","aria-label","title","LoadingSpinner","size"],"mappings":"AAAA;;;;;+BA4EA;;;eAAwBA;;;;uBA1EY;4BACG;yBAKhC;uBAKA;uEACoB;mCAMpB;;;;;;AAeP,MAAMC,eAA8B;IAClC;QACEC,IAAI;QACJC,MAAM;QACNC,aAAa;QACbC,OAAO;QACPC,aAAaC,qBAAY;QACzBC,WAAWC,mBAAiB;QAC5BC,OAAO;QACPC,YAAY;QACZC,aAAa;IACf;IACA;QACEV,IAAI;QACJC,MAAM;QACNC,aAAa;QACbC,OAAO;QACPC,aAAaO,kBAAS;QACtBL,WAAWM,gBAAc;QACzBJ,OAAO;QACPC,YAAY;QACZC,aAAa;IACf;IACA;QACEV,IAAI;QACJC,MAAM;QACNC,aAAa;QACbC,OAAO;QACPC,aAAaS,qBAAY;QACzBP,WAAWQ,mBAAiB;QAC5BN,OAAO;QACPC,YAAY;QACZC,aAAa;IACf;CACD;AAOc,SAASZ,iBAAiB,EACvCiB,YAAY,EAAE,EACdC,wBAAwB,EAAE,EACJ;IACtB,MAAMC,SAASC,IAAAA,qBAAS;IACxB,MAAMC,WAAWC,IAAAA,uBAAW;IAC5B,MAAM,CAACC,oBAAoBC,sBAAsB,GAAGC,IAAAA,eAAQ,EAAqB;IACjF,MAAM,CAACC,WAAWC,aAAa,GAAGF,IAAAA,eAAQ,EAAyB;IACnE,MAAM,CAACG,gBAAgBC,kBAAkB,GAAGJ,IAAAA,eAAQ,EAAyB;IAE7E,wCAAwC;IACxCK,IAAAA,gBAAS,EAAC;QACR,MAAMC,aAAa9B,aAAa+B,IAAI,CAACC,CAAAA,MAAOZ,SAASa,UAAU,CAACD,IAAI5B,KAAK;QACzE,IAAI0B,YAAY;YACdP,sBAAsBO;YACtB,0CAA0C;YAC1C,IAAI,OAAOI,WAAW,aAAa;gBACjCC,aAAaC,OAAO,CAAC,sBAAsBN,WAAW7B,EAAE;YAC1D;QACF,OAAO;YACL,sDAAsD;YACtD,IAAI,OAAOiC,WAAW,aAAa;gBACjC,MAAMG,aAAaF,aAAaG,OAAO,CAAC;gBACxC,MAAMC,WAAWvC,aAAa+B,IAAI,CAACC,CAAAA,MAAOA,IAAI/B,EAAE,KAAKoC;gBACrD,IAAIE,YAAYC,cAAcD,WAAW;oBACvChB,sBAAsBgB;gBACxB;YACF;QACF;IACF,GAAG;QAACnB;QAAUH;KAAsB;IAEpC,uDAAuD;IACvD,MAAMwB,yBAAyBzC,aAAa0C,MAAM,CAACV,CAAAA,MAAOQ,cAAcR;IAExE,SAASQ,cAAcR,GAAgB;QACrC,OAAOW,IAAAA,uCAAoB,EAAC1B,uBAAuBe,IAAI/B,EAAE;IAC3D;IAEA,MAAM2C,0BAA0B,OAAOC;QACrC,IAAIA,YAAY5C,EAAE,KAAKqB,oBAAoBrB,MAAMwB,WAAW;QAE5DC,aAAamB,YAAY5C,EAAE;QAC3B,IAAI;YACF,0CAA0C;YAC1C,IAAI,OAAOiC,WAAW,aAAa;gBACjCC,aAAaC,OAAO,CAAC,sBAAsBS,YAAY5C,EAAE;YAC3D;YAEA,8BAA8B;YAC9BiB,OAAO4B,IAAI,CAACD,YAAYzC,KAAK;YAC7BmB,sBAAsBsB;YACtBjB,kBAAkB;QACpB,EAAE,OAAOmB,OAAO;YACdC,QAAQD,KAAK,CAAC,iCAAiCA;QACjD,SAAU;YACRrB,aAAa;QACf;IACF;IAEA,gEAAgE;IAChE,IAAIe,uBAAuBQ,MAAM,IAAI,GAAG;QACtC,OAAO;IACT;IAEA,qBACE,qBAACC;QAAIlC,WAAW,CAAC,yCAAyC,EAAEA,UAAU,CAAC;kBACpEyB,uBAAuBU,GAAG,CAAC,CAACN;YAC3B,MAAMO,YAAYP,YAAY5C,EAAE,KAAKqB,oBAAoBrB;YACzD,MAAMoD,gBAAgB5B,cAAcoB,YAAY5C,EAAE;YAClD,MAAMqD,gBAAgBF,YAAYP,YAAYtC,SAAS,GAAGsC,YAAYxC,WAAW;YAEjF,qBACE,sBAAC6C;gBAAyBlC,WAAU;;kCAClC,qBAACuC;wBACCC,SAAS,IAAMZ,wBAAwBC;wBACvCY,cAAc,IAAM7B,kBAAkBiB,YAAY5C,EAAE;wBACpDyD,cAAc,IAAM9B,kBAAkB;wBACtC+B,cAAc,IAAM/B,kBAAkBiB,YAAY5C,EAAE;wBACpD2D,YAAY,IAAMC,WAAW,IAAMjC,kBAAkB,OAAO;wBAC5DkC,UAAUT;wBACVrC,WAAW,CAAC;;gBAEV,EAAEoC,YACE,CAAC,kBAAkB,EAAEP,YAAYpC,KAAK,CAAC,uDAAuD,CAAC,GAC/F,yEACH;gBACD,EAAE4C,gBAAgB,kCAAkC,iDAAiD;;;cAGvG,CAAC;wBACDU,cAAY,CAAC,UAAU,EAAElB,YAAY1C,WAAW,CAAC,CAAC;wBAClD6D,OAAOnB,YAAY1C,WAAW;kCAE7BkD,8BACC,qBAACY,uBAAc;4BAACC,MAAK;4BAAKlD,WAAU;2CAEpC;;8CACE,qBAACsC;oCAActC,WAAU;;gCAGxBoC,2BACC,qBAACF;oCAAIlC,WAAU;8CACb,cAAA,qBAACkC;wCAAIlC,WAAU;;;;;;oBAQxBW,mBAAmBkB,YAAY5C,EAAE,IAAI,CAACoD,+BACrC,qBAACH;wBAAIlC,WAAU;kCACb,cAAA,sBAACkC;4BAAIlC,WAAU;;8CACb,qBAACkC;oCAAIlC,WAAU;8CAAe6B,YAAY1C,WAAW;;8CACrD,qBAAC+C;oCAAIlC,WAAU;8CAAsC6B,YAAYlC,WAAW;;8CAG5E,qBAACuC;oCAAIlC,WAAU;8CACb,cAAA,qBAACkC;wCAAIlC,WAAU;;;;;;;eA9Cf6B,YAAY5C,EAAE;QAqD5B;;AAGN"}