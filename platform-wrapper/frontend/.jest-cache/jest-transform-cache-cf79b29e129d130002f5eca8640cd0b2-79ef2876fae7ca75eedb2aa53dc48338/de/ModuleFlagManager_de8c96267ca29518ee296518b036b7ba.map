{"version":3,"sources":["/Users/matt/Sites/MarketEdge/platform-wrapper/frontend/src/components/admin/ModuleFlagManager.tsx"],"sourcesContent":["'use client'\n\nimport React, { useState } from 'react'\nimport {\n  FlagIcon,\n  CubeIcon,\n  ChevronDownIcon,\n  ChevronRightIcon,\n  CheckCircleIcon,\n  XCircleIcon,\n  ExclamationTriangleIcon,\n  Cog6ToothIcon,\n  ArrowPathIcon,\n  PlusIcon,\n  EyeIcon,\n  AdjustmentsHorizontalIcon\n} from '@heroicons/react/24/outline'\nimport { useModuleFlagHierarchy, useModuleFeatureFlags } from '@/hooks/useModuleFeatureFlags'\nimport { ModuleFlagHierarchy } from '@/types/module-feature-flags'\n\ninterface ModuleFlagManagerProps {\n  moduleId?: string\n  onModuleSelect?: (moduleId: string) => void\n  showHierarchy?: boolean\n  showInheritance?: boolean\n  className?: string\n}\n\ninterface FlagHierarchyNodeProps {\n  level: string\n  flags: Array<{\n    flag_key: string\n    name: string\n    enabled: boolean\n    [key: string]: any\n  }>\n  effectiveFlags: Record<string, any>\n  onFlagSelect?: (flagKey: string) => void\n  isExpanded: boolean\n  onToggleExpanded: () => void\n}\n\nconst FlagHierarchyNode: React.FC<FlagHierarchyNodeProps> = ({\n  level,\n  flags,\n  effectiveFlags,\n  onFlagSelect,\n  isExpanded,\n  onToggleExpanded\n}) => {\n  const getLevelColor = (level: string) => {\n    switch (level) {\n      case 'global': return 'text-blue-600 bg-blue-100 border-blue-200'\n      case 'module': return 'text-green-600 bg-green-100 border-green-200'\n      case 'features': return 'text-purple-600 bg-purple-100 border-purple-200'\n      case 'capabilities': return 'text-orange-600 bg-orange-100 border-orange-200'\n      default: return 'text-gray-600 bg-gray-100 border-gray-200'\n    }\n  }\n\n  const getLevelIcon = (level: string) => {\n    switch (level) {\n      case 'global': return FlagIcon\n      case 'module': return CubeIcon\n      case 'features': return Cog6ToothIcon\n      case 'capabilities': return AdjustmentsHorizontalIcon\n      default: return FlagIcon\n    }\n  }\n\n  const LevelIcon = getLevelIcon(level)\n\n  if (flags.length === 0) return null\n\n  return (\n    <div className=\"border border-gray-200 rounded-lg mb-4\">\n      <button\n        onClick={onToggleExpanded}\n        className={`w-full flex items-center justify-between p-4 ${getLevelColor(level)} rounded-t-lg border-b`}\n      >\n        <div className=\"flex items-center\">\n          <LevelIcon className=\"h-5 w-5 mr-2\" />\n          <h4 className=\"text-lg font-medium capitalize\">{level} Flags ({flags.length})</h4>\n        </div>\n        {isExpanded ? (\n          <ChevronDownIcon className=\"h-5 w-5\" />\n        ) : (\n          <ChevronRightIcon className=\"h-5 w-5\" />\n        )}\n      </button>\n\n      {isExpanded && (\n        <div className=\"p-4 space-y-3\">\n          {flags.map((flag) => {\n            const isEffective = effectiveFlags[flag.flag_key]?.enabled\n            const effectiveSource = effectiveFlags[flag.flag_key]?.source\n            const isOverridden = effectiveSource !== level\n\n            return (\n              <div\n                key={flag.flag_key}\n                className={`flex items-center justify-between p-3 rounded-lg border ${\n                  isEffective \n                    ? 'bg-green-50 border-green-200' \n                    : 'bg-red-50 border-red-200'\n                } ${isOverridden ? 'opacity-60' : ''}`}\n                onClick={() => onFlagSelect?.(flag.flag_key)}\n              >\n                <div className=\"flex items-center space-x-3\">\n                  <div className={`w-3 h-3 rounded-full ${\n                    isEffective ? 'bg-green-500' : 'bg-red-500'\n                  }`} />\n                  \n                  <div>\n                    <p className=\"font-medium text-gray-900\">{flag.name}</p>\n                    <p className=\"text-sm text-gray-500\">{flag.flag_key}</p>\n                  </div>\n                </div>\n\n                <div className=\"flex items-center space-x-2\">\n                  <div className=\"text-right\">\n                    <div className=\"flex items-center space-x-2\">\n                      <span className={`inline-flex items-center px-2 py-1 rounded-full text-xs font-medium ${\n                        flag.enabled ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'\n                      }`}>\n                        {flag.enabled ? 'Enabled' : 'Disabled'}\n                      </span>\n                      \n                      {isOverridden && (\n                        <span className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-yellow-100 text-yellow-800\">\n                          Overridden by {effectiveSource}\n                        </span>\n                      )}\n                    </div>\n                    \n                    {effectiveSource && (\n                      <p className=\"text-xs text-gray-500 mt-1\">\n                        Effective: {isEffective ? 'Enabled' : 'Disabled'} ({effectiveSource})\n                      </p>\n                    )}\n                  </div>\n\n                  <button\n                    onClick={(e) => {\n                      e.stopPropagation()\n                      onFlagSelect?.(flag.flag_key)\n                    }}\n                    className=\"p-1 text-gray-400 hover:text-gray-600\"\n                  >\n                    <EyeIcon className=\"h-4 w-4\" />\n                  </button>\n                </div>\n              </div>\n            )\n          })}\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport const ModuleFlagManager: React.FC<ModuleFlagManagerProps> = ({\n  moduleId: initialModuleId,\n  onModuleSelect,\n  showHierarchy = true,\n  showInheritance = true,\n  className = ''\n}) => {\n  const [selectedModuleId, setSelectedModuleId] = useState(initialModuleId)\n  const [selectedFlag, setSelectedFlag] = useState<string | null>(null)\n  const [expandedLevels, setExpandedLevels] = useState<Record<string, boolean>>({\n    global: true,\n    module: true,\n    features: false,\n    capabilities: false\n  })\n\n  const moduleFlags = useModuleFeatureFlags()\n  const hierarchy = useModuleFlagHierarchy(selectedModuleId || '')\n\n  const toggleLevelExpanded = (level: string) => {\n    setExpandedLevels(prev => ({\n      ...prev,\n      [level]: !prev[level]\n    }))\n  }\n\n  const handleModuleSelect = (moduleId: string) => {\n    setSelectedModuleId(moduleId)\n    onModuleSelect?.(moduleId)\n  }\n\n  const handleFlagSelect = (flagKey: string) => {\n    setSelectedFlag(flagKey)\n  }\n\n  if (moduleFlags.isLoading || (selectedModuleId && hierarchy.isLoading)) {\n    return (\n      <div className={`space-y-6 ${className}`}>\n        <div className=\"flex items-center justify-between\">\n          <h3 className=\"text-lg font-medium text-gray-900\">Module Flag Manager</h3>\n          <div className=\"animate-spin\">\n            <ArrowPathIcon className=\"h-5 w-5 text-gray-400\" />\n          </div>\n        </div>\n        \n        <div className=\"space-y-4\">\n          {[...Array(4)].map((_, i) => (\n            <div key={i} className=\"bg-white border border-gray-200 rounded-lg p-4\">\n              <div className=\"animate-pulse\">\n                <div className=\"h-6 bg-gray-200 rounded w-1/3 mb-4\"></div>\n                <div className=\"space-y-3\">\n                  <div className=\"h-4 bg-gray-200 rounded w-full\"></div>\n                  <div className=\"h-4 bg-gray-200 rounded w-2/3\"></div>\n                  <div className=\"h-4 bg-gray-200 rounded w-1/2\"></div>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    )\n  }\n\n  if (moduleFlags.error || (selectedModuleId && hierarchy.error)) {\n    return (\n      <div className={`space-y-6 ${className}`}>\n        <div className=\"flex items-center justify-between\">\n          <h3 className=\"text-lg font-medium text-gray-900\">Module Flag Manager</h3>\n          <button\n            onClick={() => {\n              moduleFlags.refetch()\n              if (selectedModuleId) hierarchy.refetch()\n            }}\n            className=\"inline-flex items-center px-3 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50\"\n          >\n            <ArrowPathIcon className=\"h-4 w-4 mr-2\" />\n            Retry\n          </button>\n        </div>\n        \n        <div className=\"bg-red-50 border border-red-200 rounded-md p-4\">\n          <div className=\"flex\">\n            <XCircleIcon className=\"h-5 w-5 text-red-400\" />\n            <div className=\"ml-3\">\n              <h3 className=\"text-sm font-medium text-red-800\">Failed to Load Module Flags</h3>\n              <p className=\"mt-1 text-sm text-red-700\">\n                {moduleFlags.error?.message || hierarchy.error?.message}\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className={`space-y-6 ${className}`}>\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h3 className=\"text-lg font-medium text-gray-900\">Module Flag Manager</h3>\n          <p className=\"text-sm text-gray-500\">\n            Manage feature flags and their hierarchical relationships\n          </p>\n        </div>\n        <div className=\"flex items-center space-x-3\">\n          <button\n            onClick={() => {\n              moduleFlags.refetch()\n              if (selectedModuleId) hierarchy.refetch()\n            }}\n            className=\"inline-flex items-center px-3 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50\"\n          >\n            <ArrowPathIcon className=\"h-4 w-4 mr-2\" />\n            Refresh\n          </button>\n        </div>\n      </div>\n\n      {/* Module Selection */}\n      <div className=\"bg-white border border-gray-200 rounded-lg p-4\">\n        <h4 className=\"text-md font-medium text-gray-900 mb-4\">Select Module</h4>\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-3\">\n          {moduleFlags.enabledModules.map((moduleId) => (\n            <button\n              key={moduleId}\n              onClick={() => handleModuleSelect(moduleId)}\n              className={`flex items-center p-3 rounded-lg border text-left transition-colors ${\n                selectedModuleId === moduleId\n                  ? 'border-blue-500 bg-blue-50 text-blue-700'\n                  : 'border-gray-200 bg-white text-gray-700 hover:bg-gray-50'\n              }`}\n            >\n              <CubeIcon className=\"h-5 w-5 mr-3\" />\n              <div>\n                <p className=\"font-medium\">{moduleId}</p>\n                <p className=\"text-xs opacity-75\">\n                  {moduleFlags.moduleCapabilities[moduleId]?.length || 0} capabilities\n                </p>\n              </div>\n            </button>\n          ))}\n          \n          {moduleFlags.disabledModules.map((moduleId) => (\n            <button\n              key={moduleId}\n              onClick={() => handleModuleSelect(moduleId)}\n              className={`flex items-center p-3 rounded-lg border text-left transition-colors opacity-60 ${\n                selectedModuleId === moduleId\n                  ? 'border-red-500 bg-red-50 text-red-700'\n                  : 'border-gray-200 bg-gray-50 text-gray-500 hover:bg-gray-100'\n              }`}\n            >\n              <CubeIcon className=\"h-5 w-5 mr-3\" />\n              <div>\n                <p className=\"font-medium\">{moduleId}</p>\n                <p className=\"text-xs opacity-75\">Disabled</p>\n              </div>\n            </button>\n          ))}\n        </div>\n      </div>\n\n      {/* Module Flag Hierarchy */}\n      {selectedModuleId && hierarchy.hierarchy && showHierarchy && (\n        <div className=\"space-y-4\">\n          <div className=\"flex items-center justify-between\">\n            <h4 className=\"text-md font-medium text-gray-900\">\n              Flag Hierarchy: {selectedModuleId}\n            </h4>\n            <div className=\"flex items-center space-x-2\">\n              <button\n                onClick={() => setExpandedLevels({ global: true, module: true, features: true, capabilities: true })}\n                className=\"text-sm text-blue-600 hover:text-blue-700\"\n              >\n                Expand All\n              </button>\n              <button\n                onClick={() => setExpandedLevels({ global: false, module: false, features: false, capabilities: false })}\n                className=\"text-sm text-gray-600 hover:text-gray-700\"\n              >\n                Collapse All\n              </button>\n            </div>\n          </div>\n\n          {/* Global Flags */}\n          <FlagHierarchyNode\n            level=\"global\"\n            flags={hierarchy.hierarchy.global}\n            effectiveFlags={hierarchy.effectiveFlags}\n            onFlagSelect={handleFlagSelect}\n            isExpanded={expandedLevels.global}\n            onToggleExpanded={() => toggleLevelExpanded('global')}\n          />\n\n          {/* Module Flags */}\n          <FlagHierarchyNode\n            level=\"module\"\n            flags={hierarchy.hierarchy.module}\n            effectiveFlags={hierarchy.effectiveFlags}\n            onFlagSelect={handleFlagSelect}\n            isExpanded={expandedLevels.module}\n            onToggleExpanded={() => toggleLevelExpanded('module')}\n          />\n\n          {/* Feature Flags */}\n          {Object.keys(hierarchy.hierarchy.features).length > 0 && (\n            <div>\n              {Object.entries(hierarchy.hierarchy.features).map(([featureName, featureFlags]) => (\n                <FlagHierarchyNode\n                  key={featureName}\n                  level={`features.${featureName}`}\n                  flags={featureFlags}\n                  effectiveFlags={hierarchy.effectiveFlags}\n                  onFlagSelect={handleFlagSelect}\n                  isExpanded={expandedLevels.features}\n                  onToggleExpanded={() => toggleLevelExpanded('features')}\n                />\n              ))}\n            </div>\n          )}\n\n          {/* Capability Flags */}\n          {Object.keys(hierarchy.hierarchy.capabilities).length > 0 && (\n            <div>\n              {Object.entries(hierarchy.hierarchy.capabilities).map(([capabilityName, capabilityFlags]) => (\n                <FlagHierarchyNode\n                  key={capabilityName}\n                  level={`capabilities.${capabilityName}`}\n                  flags={capabilityFlags}\n                  effectiveFlags={hierarchy.effectiveFlags}\n                  onFlagSelect={handleFlagSelect}\n                  isExpanded={expandedLevels.capabilities}\n                  onToggleExpanded={() => toggleLevelExpanded('capabilities')}\n                />\n              ))}\n            </div>\n          )}\n        </div>\n      )}\n\n      {/* Flag Inheritance Chain */}\n      {selectedFlag && hierarchy.hierarchy && showInheritance && (\n        <div className=\"bg-white border border-gray-200 rounded-lg p-4\">\n          <h4 className=\"text-md font-medium text-gray-900 mb-4\">\n            Inheritance Chain: {selectedFlag}\n          </h4>\n          \n          <div className=\"space-y-3\">\n            {hierarchy.getInheritanceChain(selectedFlag).map((chainItem, index) => (\n              <div key={index} className=\"flex items-center space-x-3\">\n                <div className={`w-3 h-3 rounded-full ${\n                  chainItem.enabled ? 'bg-green-500' : 'bg-red-500'\n                }`} />\n                \n                <div className=\"flex-1\">\n                  <div className=\"flex items-center justify-between\">\n                    <p className=\"font-medium text-gray-900\">{chainItem.level}</p>\n                    <div className=\"flex items-center space-x-2\">\n                      <span className={`inline-flex items-center px-2 py-1 rounded-full text-xs font-medium ${\n                        chainItem.enabled ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'\n                      }`}>\n                        {chainItem.enabled ? 'Enabled' : 'Disabled'}\n                      </span>\n                      \n                      {chainItem.overridden_by && (\n                        <span className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-yellow-100 text-yellow-800\">\n                          Overridden by {chainItem.overridden_by}\n                        </span>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n\n          <div className=\"mt-4 pt-4 border-t border-gray-200\">\n            <div className=\"flex items-center justify-between\">\n              <p className=\"font-medium text-gray-900\">Effective State</p>\n              <span className={`inline-flex items-center px-3 py-1 rounded-full text-sm font-medium ${\n                hierarchy.effectiveFlags[selectedFlag]?.enabled \n                  ? 'bg-green-100 text-green-800' \n                  : 'bg-red-100 text-red-800'\n              }`}>\n                {hierarchy.effectiveFlags[selectedFlag]?.enabled ? 'Enabled' : 'Disabled'}\n              </span>\n            </div>\n            <p className=\"text-sm text-gray-500 mt-1\">\n              Source: {hierarchy.effectiveFlags[selectedFlag]?.source}\n            </p>\n          </div>\n        </div>\n      )}\n\n      {/* Summary */}\n      {selectedModuleId && hierarchy.hierarchy && (\n        <div className=\"grid grid-cols-1 sm:grid-cols-4 gap-4\">\n          <div className=\"bg-white border border-gray-200 rounded-lg p-4\">\n            <div className=\"flex items-center\">\n              <FlagIcon className=\"h-6 w-6 text-blue-400\" />\n              <div className=\"ml-3\">\n                <p className=\"text-sm font-medium text-gray-500\">Total Flags</p>\n                <p className=\"text-lg font-semibold text-gray-900\">\n                  {Object.keys(hierarchy.effectiveFlags).length}\n                </p>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"bg-white border border-gray-200 rounded-lg p-4\">\n            <div className=\"flex items-center\">\n              <CheckCircleIcon className=\"h-6 w-6 text-green-400\" />\n              <div className=\"ml-3\">\n                <p className=\"text-sm font-medium text-gray-500\">Enabled</p>\n                <p className=\"text-lg font-semibold text-gray-900\">\n                  {Object.values(hierarchy.effectiveFlags).filter(f => f.enabled).length}\n                </p>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"bg-white border border-gray-200 rounded-lg p-4\">\n            <div className=\"flex items-center\">\n              <XCircleIcon className=\"h-6 w-6 text-red-400\" />\n              <div className=\"ml-3\">\n                <p className=\"text-sm font-medium text-gray-500\">Disabled</p>\n                <p className=\"text-lg font-semibold text-gray-900\">\n                  {Object.values(hierarchy.effectiveFlags).filter(f => !f.enabled).length}\n                </p>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"bg-white border border-gray-200 rounded-lg p-4\">\n            <div className=\"flex items-center\">\n              <ExclamationTriangleIcon className=\"h-6 w-6 text-yellow-400\" />\n              <div className=\"ml-3\">\n                <p className=\"text-sm font-medium text-gray-500\">Inherited</p>\n                <p className=\"text-lg font-semibold text-gray-900\">\n                  {hierarchy.inheritance_chain.length}\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Empty State */}\n      {!selectedModuleId && (\n        <div className=\"text-center py-12\">\n          <CubeIcon className=\"mx-auto h-12 w-12 text-gray-400\" />\n          <h3 className=\"mt-2 text-sm font-medium text-gray-900\">Select a Module</h3>\n          <p className=\"mt-1 text-sm text-gray-500\">\n            Choose a module above to view its feature flag hierarchy.\n          </p>\n        </div>\n      )}\n    </div>\n  )\n}"],"names":["ModuleFlagManager","FlagHierarchyNode","level","flags","effectiveFlags","onFlagSelect","isExpanded","onToggleExpanded","getLevelColor","getLevelIcon","FlagIcon","CubeIcon","Cog6ToothIcon","AdjustmentsHorizontalIcon","LevelIcon","length","div","className","button","onClick","h4","ChevronDownIcon","ChevronRightIcon","map","flag","isEffective","flag_key","enabled","effectiveSource","source","isOverridden","p","name","span","e","stopPropagation","EyeIcon","moduleId","initialModuleId","onModuleSelect","showHierarchy","showInheritance","selectedModuleId","setSelectedModuleId","useState","selectedFlag","setSelectedFlag","expandedLevels","setExpandedLevels","global","module","features","capabilities","moduleFlags","useModuleFeatureFlags","hierarchy","useModuleFlagHierarchy","toggleLevelExpanded","prev","handleModuleSelect","handleFlagSelect","flagKey","isLoading","h3","ArrowPathIcon","Array","_","i","error","refetch","XCircleIcon","message","enabledModules","moduleCapabilities","disabledModules","Object","keys","entries","featureName","featureFlags","capabilityName","capabilityFlags","getInheritanceChain","chainItem","index","overridden_by","CheckCircleIcon","values","filter","f","ExclamationTriangleIcon","inheritance_chain"],"mappings":"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"}