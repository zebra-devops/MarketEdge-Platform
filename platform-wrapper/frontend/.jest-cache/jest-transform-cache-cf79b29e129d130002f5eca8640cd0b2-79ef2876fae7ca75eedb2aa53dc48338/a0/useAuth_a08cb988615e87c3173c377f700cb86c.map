{"version":3,"sources":["/Users/matt/Sites/MarketEdge/platform-wrapper/frontend/src/hooks/useAuth.ts"],"sourcesContent":["'use client'\n\nimport { useState, useEffect, createContext, useContext } from 'react'\nimport { User } from '@/types/auth'\nimport { authService } from '@/services/auth'\nimport { hasApplicationAccess as checkAppAccess, getAccessibleApplications as getApps } from '@/utils/application-access'\n// PRODUCTION FIX: Remove timer-utils dependency to avoid function reference issues\n// import { safeClearInterval, ensureTimerFunctions } from '@/utils/timer-utils'\n\ninterface EnhancedUser extends User {\n  created_at?: string\n  updated_at?: string\n}\n\ninterface TenantInfo {\n  id: string\n  name: string\n  industry: string\n  subscription_plan: string\n}\n\ninterface AuthState {\n  user: EnhancedUser | null\n  tenant: TenantInfo | null\n  permissions: string[]\n  isLoading: boolean\n  isAuthenticated: boolean\n  isInitialized: boolean\n}\n\ninterface AuthContextType extends AuthState {\n  login: (loginData: { code: string; redirect_uri: string; state?: string }) => Promise<any>\n  logout: (allDevices?: boolean) => Promise<void>\n  refreshUser: () => Promise<void>\n  hasPermission: (permission: string) => boolean\n  hasAnyPermission: (permissions: string[]) => boolean\n  hasRole: (role: string) => boolean\n  checkSession: () => Promise<any>\n  extendSession: () => Promise<any>\n  getTenantContext: () => TenantInfo | null\n  validateTenantAccess: (requiredTenant: string) => boolean\n  hasApplicationAccess: (application: string) => boolean\n  getAccessibleApplications: () => string[]\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined)\n\nexport const useAuthContext = (): AuthContextType => {\n  const context = useContext(AuthContext)\n  if (!context) {\n    throw new Error('useAuthContext must be used within an AuthProvider')\n  }\n  return context\n}\n\nexport const useAuth = (): AuthContextType => {\n  const [state, setState] = useState<AuthState>({\n    user: null,\n    tenant: null,\n    permissions: [],\n    isLoading: true,\n    isAuthenticated: false,\n    isInitialized: false\n  })\n\n  useEffect(() => {\n    initializeAuth()\n  }, [])\n\n  // Initialize timer-based features only on client-side after mount\n  useEffect(() => {\n    if (typeof window !== 'undefined') {\n      // PRODUCTION FIX: Simplified timer initialization\n      console.log('Initializing auth services with native timer support')\n      \n      // Initialize auto-refresh and activity tracking\n      authService.initializeAutoRefresh()\n      authService.initializeActivityTracking()\n\n      // Cleanup function to clear intervals when component unmounts\n      return () => {\n        const refreshInterval = (window as any).__authRefreshInterval\n        const timeoutInterval = (window as any).__sessionTimeoutInterval\n        \n        if (refreshInterval) {\n          try {\n            if (typeof window.clearInterval === 'function') {\n              window.clearInterval(refreshInterval)\n            }\n            delete (window as any).__authRefreshInterval\n          } catch (error) {\n            console.warn('Error clearing refresh interval in cleanup:', error)\n          }\n        }\n        \n        if (timeoutInterval) {\n          try {\n            if (typeof window.clearInterval === 'function') {\n              window.clearInterval(timeoutInterval)\n            }\n            delete (window as any).__sessionTimeoutInterval\n          } catch (error) {\n            console.warn('Error clearing timeout interval in cleanup:', error)\n          }\n        }\n      }\n    }\n  }, [state.isAuthenticated]) // Re-initialize when auth state changes\n\n  const initializeAuth = async () => {\n    try {\n      setState(prev => ({ ...prev, isLoading: true }))\n\n      // Check if user has valid authentication\n      if (authService.isAuthenticated()) {\n        try {\n          // Get current user data from backend\n          const userResponse = await authService.getCurrentUser()\n          const permissions = authService.getUserPermissions ? authService.getUserPermissions() : []\n          \n          setState({\n            user: userResponse.user || userResponse,\n            tenant: userResponse.tenant || null,\n            permissions,\n            isLoading: false,\n            isAuthenticated: true,\n            isInitialized: true\n          })\n        } catch (error) {\n          console.error('Failed to get current user:', error)\n          // Clear invalid tokens\n          await authService.logout()\n          setState({\n            user: null,\n            tenant: null,\n            permissions: [],\n            isLoading: false,\n            isAuthenticated: false,\n            isInitialized: true\n          })\n        }\n      } else {\n        setState({\n          user: null,\n          tenant: null,\n          permissions: [],\n          isLoading: false,\n          isAuthenticated: false,\n          isInitialized: true\n        })\n      }\n    } catch (error) {\n      console.error('Auth initialization failed:', error)\n      setState({\n        user: null,\n        tenant: null,\n        permissions: [],\n        isLoading: false,\n        isAuthenticated: false,\n        isInitialized: true\n      })\n    }\n  }\n\n  const login = async (loginData: { code: string; redirect_uri: string; state?: string }) => {\n    setState(prev => ({ ...prev, isLoading: true }))\n    \n    try {\n      const response = await authService.login(loginData)\n      \n      setState({\n        user: response.user || response,\n        tenant: response.tenant || null,\n        permissions: response.permissions || [],\n        isLoading: false,\n        isAuthenticated: true,\n        isInitialized: true\n      })\n\n      return response\n    } catch (error) {\n      setState(prev => ({\n        ...prev,\n        isLoading: false,\n        user: null,\n        tenant: null,\n        permissions: [],\n        isAuthenticated: false\n      }))\n      throw error\n    }\n  }\n\n  const logout = async (allDevices: boolean = false) => {\n    setState(prev => ({ ...prev, isLoading: true }))\n    \n    try {\n      await authService.logout(allDevices)\n    } catch (error) {\n      console.warn('Logout error:', error)\n    } finally {\n      setState({\n        user: null,\n        tenant: null,\n        permissions: [],\n        isLoading: false,\n        isAuthenticated: false,\n        isInitialized: true\n      })\n    }\n  }\n\n  const refreshUser = async () => {\n    try {\n      const userResponse = await authService.getCurrentUser()\n      const permissions = authService.getUserPermissions ? authService.getUserPermissions() : []\n      \n      setState(prev => ({\n        ...prev,\n        user: userResponse.user || userResponse,\n        tenant: userResponse.tenant || null,\n        permissions\n      }))\n    } catch (error) {\n      console.error('Failed to refresh user data:', error)\n      // Clear auth state on refresh failure\n      setState(prev => ({\n        ...prev,\n        user: null,\n        tenant: null,\n        permissions: [],\n        isAuthenticated: false\n      }))\n      await authService.logout()\n      throw error\n    }\n  }\n\n  const hasPermission = (permission: string): boolean => {\n    return authService.hasPermission ? authService.hasPermission(permission) : false\n  }\n\n  const hasAnyPermission = (permissions: string[]): boolean => {\n    return authService.hasAnyPermission ? authService.hasAnyPermission(permissions) : false\n  }\n\n  const hasRole = (role: string): boolean => {\n    return authService.getUserRole ? authService.getUserRole() === role : false\n  }\n\n  const checkSession = async () => {\n    try {\n      return authService.checkSession ? await authService.checkSession() : { valid: true }\n    } catch (error) {\n      console.error('Session check failed:', error)\n      throw error\n    }\n  }\n\n  const extendSession = async () => {\n    try {\n      return authService.extendSession ? await authService.extendSession() : { extended: true }\n    } catch (error) {\n      console.error('Session extension failed:', error)\n      throw error\n    }\n  }\n\n  const getTenantContext = (): TenantInfo | null => {\n    return state.tenant\n  }\n\n  const validateTenantAccess = (requiredTenant: string): boolean => {\n    if (!state.tenant || !state.isAuthenticated) {\n      return false\n    }\n    return state.tenant.id === requiredTenant\n  }\n\n  const hasApplicationAccess = (application: string): boolean => {\n    return checkAppAccess(state.user?.application_access, application as any)\n  }\n\n  const getAccessibleApplications = (): string[] => {\n    return getApps(state.user?.application_access)\n  }\n\n  return {\n    ...state,\n    login,\n    logout,\n    refreshUser,\n    hasPermission,\n    hasAnyPermission,\n    hasRole,\n    checkSession,\n    extendSession,\n    getTenantContext,\n    validateTenantAccess,\n    hasApplicationAccess,\n    getAccessibleApplications\n  }\n}\n\nexport { AuthContext }"],"names":["AuthContext","useAuth","useAuthContext","createContext","undefined","context","useContext","Error","state","setState","useState","user","tenant","permissions","isLoading","isAuthenticated","isInitialized","useEffect","initializeAuth","window","console","log","authService","initializeAutoRefresh","initializeActivityTracking","refreshInterval","__authRefreshInterval","timeoutInterval","__sessionTimeoutInterval","clearInterval","error","warn","prev","userResponse","getCurrentUser","getUserPermissions","logout","login","loginData","response","allDevices","refreshUser","hasPermission","permission","hasAnyPermission","hasRole","role","getUserRole","checkSession","valid","extendSession","extended","getTenantContext","validateTenantAccess","requiredTenant","id","hasApplicationAccess","application","checkAppAccess","application_access","getAccessibleApplications","getApps"],"mappings":"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"}