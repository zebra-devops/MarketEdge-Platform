{"version":3,"sources":["/Users/matt/Sites/MarketEdge/platform-wrapper/frontend/src/hooks/useFeatureFlags.ts"],"sourcesContent":["'use client'\n\nimport { useQuery, useQueryClient } from 'react-query'\nimport { useAuth } from './useAuth'\nimport { featureFlagApiService } from '@/services/feature-flag-api'\nimport {\n  UseFeatureFlagResult,\n  UseFeatureFlagsResult,\n  UseAllFeatureFlagsResult,\n  FeatureFlagOptions,\n  FeatureFlagsOptions,\n  FeatureFlagError\n} from '@/types/feature-flags'\n\n// Query key factory for consistent cache management\nexport const featureFlagKeys = {\n  all: ['featureFlags'] as const,\n  single: (flagKey: string) => ['featureFlags', 'single', flagKey] as const,\n  multiple: (flagKeys: string[]) => ['featureFlags', 'multiple', flagKeys.sort().join(',')] as const,\n  enabled: (moduleId?: string) => ['featureFlags', 'enabled', moduleId] as const,\n  user: (userId: string) => ['featureFlags', 'user', userId] as const,\n}\n\n// Default options\nconst DEFAULT_OPTIONS: Required<FeatureFlagOptions> = {\n  fallbackValue: false,\n  cacheTime: 5 * 60 * 1000, // 5 minutes\n  staleTime: 2 * 60 * 1000, // 2 minutes\n  refetchInterval: false,\n  refetchOnWindowFocus: true,\n  retryCount: 2,\n  enabled: true,\n}\n\n/**\n * Hook for checking a single feature flag\n * \n * @param flagKey - The feature flag key to check\n * @param options - Configuration options\n * @returns UseFeatureFlagResult with flag state and utilities\n */\nexport function useFeatureFlag(\n  flagKey: string,\n  options: FeatureFlagOptions = {}\n): UseFeatureFlagResult {\n  const { user, isAuthenticated } = useAuth()\n  const queryClient = useQueryClient()\n  \n  const mergedOptions = { ...DEFAULT_OPTIONS, ...options }\n  \n  const query = useQuery({\n    queryKey: featureFlagKeys.single(flagKey),\n    queryFn: () => featureFlagApiService.checkFeatureFlag(flagKey),\n    enabled: isAuthenticated && mergedOptions.enabled && !!flagKey,\n    cacheTime: mergedOptions.cacheTime,\n    staleTime: mergedOptions.staleTime,\n    refetchInterval: mergedOptions.refetchInterval,\n    refetchOnWindowFocus: mergedOptions.refetchOnWindowFocus,\n    retry: mergedOptions.retryCount,\n    onError: (error) => {\n      console.warn(`Feature flag check failed for '${flagKey}':`, error)\n    },\n  })\n\n  const refetch = () => {\n    queryClient.invalidateQueries(featureFlagKeys.single(flagKey))\n    return query.refetch()\n  }\n\n  // Determine flag state with fallback\n  let isEnabled = mergedOptions.fallbackValue\n  let config: Record<string, any> | null = null\n  let error: Error | null = null\n\n  if (query.data) {\n    isEnabled = query.data.enabled\n    config = query.data.config || null\n  } else if (query.error) {\n    error = query.error instanceof Error ? query.error : new Error('Unknown error')\n    // Use fallback for errors unless it's a definitive \"disabled\" response\n    if (query.error instanceof FeatureFlagError && query.error.statusCode === 404) {\n      isEnabled = false // Flag doesn't exist, so it's definitely disabled\n    }\n  }\n\n  return {\n    isEnabled,\n    isLoading: query.isLoading,\n    error,\n    config,\n    refetch,\n    lastUpdated: query.dataUpdatedAt ? new Date(query.dataUpdatedAt) : undefined,\n  }\n}\n\n/**\n * Hook for checking multiple feature flags\n * \n * @param flagKeys - Array of feature flag keys to check\n * @param options - Configuration options\n * @returns UseFeatureFlagsResult with flags state and utilities\n */\nexport function useFeatureFlags(\n  flagKeys: string[],\n  options: FeatureFlagsOptions = {}\n): UseFeatureFlagsResult {\n  const { isAuthenticated } = useAuth()\n  const queryClient = useQueryClient()\n  \n  const mergedOptions = {\n    ...DEFAULT_OPTIONS,\n    ...options,\n    fallbackValues: options.fallbackValues || {},\n  }\n\n  // Sort flag keys for consistent cache keys\n  const sortedFlagKeys = [...flagKeys].sort()\n  \n  const query = useQuery({\n    queryKey: featureFlagKeys.multiple(sortedFlagKeys),\n    queryFn: () => featureFlagApiService.checkMultipleFlags(sortedFlagKeys),\n    enabled: isAuthenticated && mergedOptions.enabled && flagKeys.length > 0,\n    cacheTime: mergedOptions.cacheTime,\n    staleTime: mergedOptions.staleTime,\n    refetchInterval: mergedOptions.refetchInterval,\n    refetchOnWindowFocus: mergedOptions.refetchOnWindowFocus,\n    retry: mergedOptions.retryCount,\n    onError: (error) => {\n      console.warn(`Feature flags check failed for keys [${flagKeys.join(', ')}]:`, error)\n    },\n  })\n\n  const refetch = () => {\n    queryClient.invalidateQueries(featureFlagKeys.multiple(sortedFlagKeys))\n    return query.refetch()\n  }\n\n  // Build result objects\n  const flags: Record<string, boolean> = {}\n  const configs: Record<string, Record<string, any>> = {}\n\n  flagKeys.forEach(flagKey => {\n    if (query.data && query.data[flagKey]) {\n      flags[flagKey] = query.data[flagKey].enabled\n      configs[flagKey] = query.data[flagKey].config || {}\n    } else {\n      // Use fallback value\n      flags[flagKey] = mergedOptions.fallbackValues[flagKey] ?? mergedOptions.fallbackValue\n      configs[flagKey] = {}\n    }\n  })\n\n  return {\n    flags,\n    isLoading: query.isLoading,\n    error: query.error instanceof Error ? query.error : null,\n    configs,\n    refetch,\n    lastUpdated: query.dataUpdatedAt ? new Date(query.dataUpdatedAt) : undefined,\n  }\n}\n\n/**\n * Hook for getting all enabled features for the current user\n * \n * @param moduleId - Optional module ID to filter features\n * @param options - Configuration options\n * @returns UseAllFeatureFlagsResult with all enabled flags\n */\nexport function useAllFeatureFlags(\n  moduleId?: string,\n  options: Omit<FeatureFlagOptions, 'fallbackValue'> = {}\n): UseAllFeatureFlagsResult {\n  const { isAuthenticated } = useAuth()\n  const queryClient = useQueryClient()\n  \n  const mergedOptions = { ...DEFAULT_OPTIONS, ...options }\n  \n  const query = useQuery({\n    queryKey: featureFlagKeys.enabled(moduleId),\n    queryFn: () => featureFlagApiService.getEnabledFeatures(moduleId),\n    enabled: isAuthenticated && mergedOptions.enabled,\n    cacheTime: mergedOptions.cacheTime,\n    staleTime: mergedOptions.staleTime,\n    refetchInterval: mergedOptions.refetchInterval,\n    refetchOnWindowFocus: mergedOptions.refetchOnWindowFocus,\n    retry: mergedOptions.retryCount,\n    onError: (error) => {\n      console.warn('All feature flags check failed:', error)\n    },\n  })\n\n  const refetch = () => {\n    queryClient.invalidateQueries(featureFlagKeys.enabled(moduleId))\n    return query.refetch()\n  }\n\n  // Transform API response to expected format\n  const allFlags: Record<string, {\n    enabled: boolean\n    name: string\n    config: Record<string, any>\n    module_id?: string\n  }> = {}\n\n  if (query.data?.enabled_features) {\n    Object.entries(query.data.enabled_features).forEach(([flagKey, flagData]) => {\n      allFlags[flagKey] = {\n        enabled: true, // All flags from this endpoint are enabled\n        name: flagData.name,\n        config: flagData.config,\n        module_id: flagData.module_id,\n      }\n    })\n  }\n\n  return {\n    allFlags,\n    isLoading: query.isLoading,\n    error: query.error instanceof Error ? query.error : null,\n    refetch,\n    lastUpdated: query.dataUpdatedAt ? new Date(query.dataUpdatedAt) : undefined,\n  }\n}\n\n/**\n * Utility hook for cache management and optimization\n */\nexport function useFeatureFlagCache() {\n  const queryClient = useQueryClient()\n  \n  const invalidateFlag = (flagKey: string) => {\n    queryClient.invalidateQueries(featureFlagKeys.single(flagKey))\n  }\n\n  const invalidateMultipleFlags = (flagKeys: string[]) => {\n    queryClient.invalidateQueries(featureFlagKeys.multiple(flagKeys))\n  }\n\n  const invalidateAllFlags = () => {\n    queryClient.invalidateQueries(featureFlagKeys.all)\n  }\n\n  const preloadFlags = async (flagKeys: string[]) => {\n    // Fire parallel prefetch requests\n    const promises = flagKeys.map(flagKey => \n      queryClient.prefetchQuery({\n        queryKey: featureFlagKeys.single(flagKey),\n        queryFn: () => featureFlagApiService.checkFeatureFlag(flagKey),\n        staleTime: DEFAULT_OPTIONS.staleTime,\n      })\n    )\n\n    try {\n      await Promise.allSettled(promises)\n    } catch (error) {\n      console.warn('Some flags failed to preload:', error)\n    }\n  }\n\n  const getCachedFlag = (flagKey: string) => {\n    return queryClient.getQueryData(featureFlagKeys.single(flagKey))\n  }\n\n  const setCachedFlag = (flagKey: string, data: any) => {\n    queryClient.setQueryData(featureFlagKeys.single(flagKey), data)\n  }\n\n  return {\n    invalidateFlag,\n    invalidateMultipleFlags,\n    invalidateAllFlags,\n    preloadFlags,\n    getCachedFlag,\n    setCachedFlag,\n  }\n}"],"names":["featureFlagKeys","useAllFeatureFlags","useFeatureFlag","useFeatureFlagCache","useFeatureFlags","all","single","flagKey","multiple","flagKeys","sort","join","enabled","moduleId","user","userId","DEFAULT_OPTIONS","fallbackValue","cacheTime","staleTime","refetchInterval","refetchOnWindowFocus","retryCount","options","isAuthenticated","useAuth","queryClient","useQueryClient","mergedOptions","query","useQuery","queryKey","queryFn","featureFlagApiService","checkFeatureFlag","retry","onError","error","console","warn","refetch","invalidateQueries","isEnabled","config","data","Error","FeatureFlagError","statusCode","isLoading","lastUpdated","dataUpdatedAt","Date","undefined","fallbackValues","sortedFlagKeys","checkMultipleFlags","length","flags","configs","forEach","getEnabledFeatures","allFlags","enabled_features","Object","entries","flagData","name","module_id","invalidateFlag","invalidateMultipleFlags","invalidateAllFlags","preloadFlags","promises","map","prefetchQuery","Promise","allSettled","getCachedFlag","getQueryData","setCachedFlag","setQueryData"],"mappings":"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"}