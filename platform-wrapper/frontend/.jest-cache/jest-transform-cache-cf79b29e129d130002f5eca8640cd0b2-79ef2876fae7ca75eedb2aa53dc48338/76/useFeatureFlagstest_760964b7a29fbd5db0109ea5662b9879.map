{"version":3,"sources":["/Users/matt/Sites/MarketEdge/platform-wrapper/frontend/src/hooks/__tests__/useFeatureFlags.test.tsx"],"sourcesContent":["import React from 'react'\nimport { renderHook, waitFor } from '@testing-library/react'\nimport { QueryClient, QueryClientProvider } from 'react-query'\nimport { useFeatureFlag, useFeatureFlags, useAllFeatureFlags } from '../useFeatureFlags'\nimport { featureFlagApiService } from '@/services/feature-flag-api'\nimport { useAuth } from '../useAuth'\n\n// Mock the dependencies\njest.mock('../useAuth')\njest.mock('@/services/feature-flag-api')\n\nconst mockedUseAuth = useAuth as jest.MockedFunction<typeof useAuth>\nconst mockedApiService = featureFlagApiService as jest.Mocked<typeof featureFlagApiService>\n\n// Test wrapper component\nconst createTestWrapper = () => {\n  const queryClient = new QueryClient({\n    defaultOptions: {\n      queries: {\n        retry: false,\n        cacheTime: 0,\n      },\n    },\n  })\n\n  return ({ children }: { children: React.ReactNode }) => (\n    <QueryClientProvider client={queryClient}>\n      {children}\n    </QueryClientProvider>\n  )\n}\n\ndescribe('useFeatureFlag', () => {\n  beforeEach(() => {\n    jest.clearAllMocks()\n    \n    // Default auth mock\n    mockedUseAuth.mockReturnValue({\n      user: { id: 'test-user', organisation_id: 'test-org' },\n      isAuthenticated: true,\n      isLoading: false,\n      isInitialized: true,\n    } as any)\n  })\n\n  it('should return flag state when enabled', async () => {\n    // Mock API response\n    mockedApiService.checkFeatureFlag.mockResolvedValue({\n      flag_key: 'test.flag',\n      enabled: true,\n      user_id: 'test-user',\n      config: { theme: 'dark' }\n    })\n\n    const { result } = renderHook(\n      () => useFeatureFlag('test.flag'),\n      { wrapper: createTestWrapper() }\n    )\n\n    // Initially loading\n    expect(result.current.isLoading).toBe(true)\n    expect(result.current.isEnabled).toBe(false) // fallback value\n\n    // Wait for API call\n    await waitFor(() => {\n      expect(result.current.isLoading).toBe(false)\n    })\n\n    expect(result.current.isEnabled).toBe(true)\n    expect(result.current.config).toEqual({ theme: 'dark' })\n    expect(result.current.error).toBeNull()\n  })\n\n  it('should return fallback value when flag is disabled', async () => {\n    mockedApiService.checkFeatureFlag.mockResolvedValue({\n      flag_key: 'test.flag',\n      enabled: false,\n      user_id: 'test-user'\n    })\n\n    const { result } = renderHook(\n      () => useFeatureFlag('test.flag', { fallbackValue: true }),\n      { wrapper: createTestWrapper() }\n    )\n\n    await waitFor(() => {\n      expect(result.current.isLoading).toBe(false)\n    })\n\n    expect(result.current.isEnabled).toBe(false) // Actual API result overrides fallback\n    expect(result.current.config).toBeNull()\n  })\n\n  it('should handle API errors with fallback', async () => {\n    const error = new Error('API Error')\n    mockedApiService.checkFeatureFlag.mockRejectedValue(error)\n\n    const { result } = renderHook(\n      () => useFeatureFlag('test.flag', { fallbackValue: true }),\n      { wrapper: createTestWrapper() }\n    )\n\n    await waitFor(() => {\n      expect(result.current.isLoading).toBe(false)\n    })\n\n    expect(result.current.isEnabled).toBe(true) // Uses fallback\n    expect(result.current.error).toBe(error)\n  })\n\n  it('should not make API calls when not authenticated', () => {\n    mockedUseAuth.mockReturnValue({\n      user: null,\n      isAuthenticated: false,\n      isLoading: false,\n      isInitialized: true,\n    } as any)\n\n    renderHook(\n      () => useFeatureFlag('test.flag'),\n      { wrapper: createTestWrapper() }\n    )\n\n    expect(mockedApiService.checkFeatureFlag).not.toHaveBeenCalled()\n  })\n\n  it('should refetch when refetch is called', async () => {\n    mockedApiService.checkFeatureFlag.mockResolvedValue({\n      flag_key: 'test.flag',\n      enabled: true,\n      user_id: 'test-user'\n    })\n\n    const { result } = renderHook(\n      () => useFeatureFlag('test.flag'),\n      { wrapper: createTestWrapper() }\n    )\n\n    await waitFor(() => {\n      expect(result.current.isLoading).toBe(false)\n    })\n\n    // Clear mock calls\n    mockedApiService.checkFeatureFlag.mockClear()\n\n    // Trigger refetch\n    result.current.refetch()\n\n    await waitFor(() => {\n      expect(mockedApiService.checkFeatureFlag).toHaveBeenCalledWith('test.flag')\n    })\n  })\n})\n\ndescribe('useFeatureFlags', () => {\n  beforeEach(() => {\n    jest.clearAllMocks()\n    \n    mockedUseAuth.mockReturnValue({\n      user: { id: 'test-user', organisation_id: 'test-org' },\n      isAuthenticated: true,\n      isLoading: false,\n      isInitialized: true,\n    } as any)\n  })\n\n  it('should return multiple flag states', async () => {\n    const mockResults = {\n      'flag.one': { flag_key: 'flag.one', enabled: true, user_id: 'test-user', config: {} },\n      'flag.two': { flag_key: 'flag.two', enabled: false, user_id: 'test-user', config: { value: 42 } },\n    }\n\n    mockedApiService.checkMultipleFlags.mockResolvedValue(mockResults)\n\n    const { result } = renderHook(\n      () => useFeatureFlags(['flag.one', 'flag.two']),\n      { wrapper: createTestWrapper() }\n    )\n\n    await waitFor(() => {\n      expect(result.current.isLoading).toBe(false)\n    })\n\n    expect(result.current.flags).toEqual({\n      'flag.one': true,\n      'flag.two': false,\n    })\n\n    expect(result.current.configs).toEqual({\n      'flag.one': {},\n      'flag.two': { value: 42 },\n    })\n  })\n\n  it('should use fallback values for missing flags', async () => {\n    mockedApiService.checkMultipleFlags.mockResolvedValue({})\n\n    const { result } = renderHook(\n      () => useFeatureFlags(['flag.one', 'flag.two'], {\n        fallbackValues: { 'flag.one': true, 'flag.two': false }\n      }),\n      { wrapper: createTestWrapper() }\n    )\n\n    await waitFor(() => {\n      expect(result.current.isLoading).toBe(false)\n    })\n\n    expect(result.current.flags).toEqual({\n      'flag.one': true,\n      'flag.two': false,\n    })\n  })\n\n  it('should sort flag keys consistently', async () => {\n    const mockResults = {\n      'flag.b': { flag_key: 'flag.b', enabled: true, user_id: 'test-user' },\n      'flag.a': { flag_key: 'flag.a', enabled: false, user_id: 'test-user' },\n    }\n\n    mockedApiService.checkMultipleFlags.mockResolvedValue(mockResults)\n\n    renderHook(\n      () => useFeatureFlags(['flag.b', 'flag.a']),\n      { wrapper: createTestWrapper() }\n    )\n\n    await waitFor(() => {\n      expect(mockedApiService.checkMultipleFlags).toHaveBeenCalledWith(['flag.a', 'flag.b'])\n    })\n  })\n})\n\ndescribe('useAllFeatureFlags', () => {\n  beforeEach(() => {\n    jest.clearAllMocks()\n    \n    mockedUseAuth.mockReturnValue({\n      user: { id: 'test-user', organisation_id: 'test-org' },\n      isAuthenticated: true,\n      isLoading: false,\n      isInitialized: true,\n    } as any)\n  })\n\n  it('should return all enabled features', async () => {\n    const mockResponse = {\n      enabled_features: {\n        'feature.one': { name: 'Feature One', config: { value: 1 }, module_id: 'module1' },\n        'feature.two': { name: 'Feature Two', config: {}, module_id: 'module2' },\n      },\n      user_id: 'test-user',\n      organisation_id: 'test-org',\n    }\n\n    mockedApiService.getEnabledFeatures.mockResolvedValue(mockResponse)\n\n    const { result } = renderHook(\n      () => useAllFeatureFlags(),\n      { wrapper: createTestWrapper() }\n    )\n\n    await waitFor(() => {\n      expect(result.current.isLoading).toBe(false)\n    })\n\n    expect(result.current.allFlags).toEqual({\n      'feature.one': {\n        enabled: true,\n        name: 'Feature One',\n        config: { value: 1 },\n        module_id: 'module1',\n      },\n      'feature.two': {\n        enabled: true,\n        name: 'Feature Two',\n        config: {},\n        module_id: 'module2',\n      },\n    })\n  })\n\n  it('should filter by module ID when provided', async () => {\n    mockedApiService.getEnabledFeatures.mockResolvedValue({\n      enabled_features: {},\n      user_id: 'test-user',\n      organisation_id: 'test-org',\n    })\n\n    renderHook(\n      () => useAllFeatureFlags('module1'),\n      { wrapper: createTestWrapper() }\n    )\n\n    await waitFor(() => {\n      expect(mockedApiService.getEnabledFeatures).toHaveBeenCalledWith('module1')\n    })\n  })\n\n  it('should handle empty response', async () => {\n    mockedApiService.getEnabledFeatures.mockResolvedValue({\n      enabled_features: {},\n      user_id: 'test-user',\n      organisation_id: 'test-org',\n    })\n\n    const { result } = renderHook(\n      () => useAllFeatureFlags(),\n      { wrapper: createTestWrapper() }\n    )\n\n    await waitFor(() => {\n      expect(result.current.isLoading).toBe(false)\n    })\n\n    expect(result.current.allFlags).toEqual({})\n  })\n})"],"names":["jest","mock","mockedUseAuth","useAuth","mockedApiService","featureFlagApiService","createTestWrapper","queryClient","QueryClient","defaultOptions","queries","retry","cacheTime","children","QueryClientProvider","client","describe","beforeEach","clearAllMocks","mockReturnValue","user","id","organisation_id","isAuthenticated","isLoading","isInitialized","it","checkFeatureFlag","mockResolvedValue","flag_key","enabled","user_id","config","theme","result","renderHook","useFeatureFlag","wrapper","expect","current","toBe","isEnabled","waitFor","toEqual","error","toBeNull","fallbackValue","Error","mockRejectedValue","not","toHaveBeenCalled","mockClear","refetch","toHaveBeenCalledWith","mockResults","value","checkMultipleFlags","useFeatureFlags","flags","configs","fallbackValues","mockResponse","enabled_features","name","module_id","getEnabledFeatures","useAllFeatureFlags","allFlags"],"mappings":"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"}