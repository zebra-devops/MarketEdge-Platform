  name: Zebra Associates Protection (US-0)

  on:
    pull_request:
      branches:
        - main
        - develop
      paths:
        - "app/auth/**"
        - "app/api/api_v1/endpoints/auth.py"
        - "app/api/api_v1/endpoints/user_management.py"
        - "app/models/user*.py"
        - "platform-wrapper/frontend/src/**"
        - ".github/workflows/zebra-smoke.yml"
    push:
      branches:
        - main
    workflow_dispatch:

  permissions:
    contents: read
    checks: write
    pull-requests: write

  env:
    BACKEND_URL: http://localhost:8000
    FRONTEND_URL: http://localhost:3000
    DATABASE_URL: "postgresql://test_user:test_password@localhost:5432/marketedge_test"
    AUTH0_DOMAIN: ${{ secrets.AUTH0_DOMAIN }}
    AUTH0_CLIENT_ID: ${{ secrets.AUTH0_CLIENT_ID }}
    AUTH0_CLIENT_SECRET: ${{ secrets.AUTH0_CLIENT_SECRET }}
    AUTH0_TEST_EMAIL: ${{ secrets.ZEBRA_TEST_EMAIL }}
    AUTH0_TEST_PASSWORD: ${{ secrets.ZEBRA_TEST_PASSWORD }}

  jobs:
    zebra-smoke-test:
      name: Zebra Associates Protection
      runs-on: ubuntu-latest
      timeout-minutes: 10

      services:
        postgres:
          image: postgres:15
          env:
            POSTGRES_USER: test_user
            POSTGRES_PASSWORD: test_password
            POSTGRES_DB: marketedge_test
          ports:
            - 5432:5432
          options: >-
            --health-cmd pg_isready
            --health-interval 10s
            --health-timeout 5s
            --health-retries 5

      steps:
        - name: Checkout code
          uses: actions/checkout@v4

        - name: Setup Python 3.11
          uses: actions/setup-python@v5
          with:
            python-version: "3.11"
            cache: "pip"

        - name: Install Python dependencies
          run: |
            python -m pip install --upgrade pip
            pip install -r requirements.txt

        - name: Setup database
          run: |
            alembic upgrade head
            python database/seeds/initial_data.py
            python database/seeds/phase3_data.py

        - name: Start backend server
          run: |
            uvicorn app.main:app --host 0.0.0.0 --port 8000 &
            timeout 30 bash -c 'until curl -f http://localhost:8000/health; do sleep 1; done'
            echo "Backend started successfully"

        - name: Setup Node.js 18
          uses: actions/setup-node@v4
          with:
            node-version: "18"
            cache: "npm"
            cache-dependency-path: platform-wrapper/frontend/package-lock.json

        - name: Install Node dependencies
          working-directory: platform-wrapper/frontend
          run: npm ci

        - name: Install Playwright browsers
          working-directory: platform-wrapper/frontend
          run: npx playwright install --with-deps chromium

        - name: Start frontend server
          working-directory: platform-wrapper/frontend
          run: |
            npm run dev &
            timeout 60 bash -c 'until curl -f http://localhost:3000; do sleep 1; done'
            echo "Frontend started successfully"

        - name: Run Zebra Associates Smoke Test
          id: zebra_test
          working-directory: platform-wrapper/frontend
          run: |
            echo "Running Zebra Associates Protection Test"
            npx playwright test zebra-associates-smoke.spec.ts --project=chromium --reporter=list
          timeout-minutes: 2

        - name: Run standalone smoke test
          if: always()
          run: |
            echo "Running standalone smoke test"
            node scripts/zebra-smoke.js
          timeout-minutes: 2

        - name: Upload test results
          if: always()
          uses: actions/upload-artifact@v4
          with:
            name: zebra-smoke-results
            path: |
              platform-wrapper/frontend/test-results/
              platform-wrapper/frontend/playwright-report/
            retention-days: 30

        - name: Comment on PR
          if: github.event_name == 'pull_request'
          uses: actions/github-script@v7
          with:
            script: |
              const testPassed = '${{ steps.zebra_test.outcome }}' === 'success'
              const body = testPassed
                ? '## ‚úÖ Zebra Associates Protection: PASSED\n\nü¶ì **¬£925K Opportunity Status:** PROTECTED'
                : '## ‚ùå Zebra Associates Protection: FAILED\n\nüö® **¬£925K Opportunity Status:** AT RISK'
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body
              })

    zebra-protection-gate:
      name: Zebra Protection Gate
      runs-on: ubuntu-latest
      needs: zebra-smoke-test
      if: always()
      steps:
        - name: Check if test passed
          run: |
            if [ "${{ needs.zebra-smoke-test.result }}" != "success" ]; then
              echo "BLOCKED: Zebra Associates protection test must pass"
              exit 1
            fi
            echo "Zebra Associates protection verified"
